/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package dialog;

import domen.Grad;
import domen.Korisnik;
import forme.KorisniciForma;
import java.io.IOException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import kontroler.KlijentController;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Darko
 */
public class IzmeniKorisnikaDialog extends javax.swing.JDialog {

    private Korisnik korisnik;
    private KlijentController kom;
    private boolean izmena = false;
    private KorisniciForma parentForma;
    
    public IzmeniKorisnikaDialog(java.awt.Frame parent, boolean modal, Korisnik k) throws IOException, ClassNotFoundException {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        kom = KlijentController.getInstance();
        korisnik = k;
        parentForma = (KorisniciForma) parent;
        popuniGrad();
        popuniPolja();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        imeField = new javax.swing.JTextField();
        prezimeField = new javax.swing.JTextField();
        jmbgField = new javax.swing.JTextField();
        gradComboBox = new javax.swing.JComboBox<>();
        naslovLabel = new javax.swing.JLabel();
        unesiKorisnika = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Ime:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Prezime:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("JMBG:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Grad:");

        naslovLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        naslovLabel.setText("Dodaj Korisnika");

        unesiKorisnika.setText("Dodaj Korisnika");
        unesiKorisnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unesiKorisnikaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(imeField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prezimeField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jmbgField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gradComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(unesiKorisnika, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(naslovLabel)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(naslovLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imeField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(prezimeField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jmbgField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gradComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(unesiKorisnika, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unesiKorisnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unesiKorisnikaActionPerformed
        try {
        String ime = imeField.getText().trim();
        String prezime = prezimeField.getText().trim();
        String jmbg = jmbgField.getText().trim();
        Grad grad = (Grad) gradComboBox.getSelectedItem();

        if (ime.isEmpty() || prezime.isEmpty() || jmbg.isEmpty() || grad == null) {
            JOptionPane.showMessageDialog(this,
                    "Sva polja moraju biti popunjena!",
                    "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        
        Korisnik k = new Korisnik();
        
        k.setIdKorisnik(korisnik.getIdKorisnik());
        k.setIme(ime);
        k.setPrezime(prezime);
        k.setJmbg(jmbg);
        k.setGrad(grad);

        ServerskiOdgovor so = kom.izmeniKorisnika(k);

        if (so.isUspesno()) {
            JOptionPane.showMessageDialog(this,
                    izmena ? "Korisnik je uspešno izmenjen." : "Korisnik je uspešno dodat.",
                    "Uspeh", JOptionPane.INFORMATION_MESSAGE);
            dispose(); 
            parentForma.popuniKorisnike(null);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Operacija nije uspela: " + so.getPoruka(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this,
                "Greška: " + e.getMessage(),
                "Greška", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_unesiKorisnikaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Grad> gradComboBox;
    private javax.swing.JTextField imeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jmbgField;
    private javax.swing.JLabel naslovLabel;
    private javax.swing.JTextField prezimeField;
    private javax.swing.JButton unesiKorisnika;
    // End of variables declaration//GEN-END:variables

    private void popuniPolja() {
        if(this.korisnik.getIme() != "Ime"){
            izmena = true;
            imeField.setText(this.korisnik.getIme());
            prezimeField.setText(this.korisnik.getPrezime());
            jmbgField.setText(this.korisnik.getJmbg());
            gradComboBox.setSelectedItem(this.korisnik.getGrad());
            naslovLabel.setText("Izmeni korisnika");
            unesiKorisnika.setText("Izmeni korisnika");
        }
    }
        
    private void popuniGrad() {
        try{
            ServerskiOdgovor so = kom.vratiListuSviGrad();
            
            if(so.isUspesno()){
                List<Grad> gradovi  = (List<Grad>) so.getOdgovor();
                DefaultComboBoxModel<Grad> model = new DefaultComboBoxModel<>();
                for (Grad g : gradovi) {
                    model.addElement(g);
                }
                
                gradComboBox.setModel(model);
            }else {
                JOptionPane.showMessageDialog(this,
                        "Ne mogu da učitam listu gradova: " + so.getPoruka(),
                        "Greška", JOptionPane.ERROR_MESSAGE);
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Greška pri učitavanju gradova: " + e.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }
}
