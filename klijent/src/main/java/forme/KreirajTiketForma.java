/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domen.Korisnik;
import domen.KvoteUtakmica;
import domen.Par;
import domen.Radnik;
import domen.Tiket;
import domen.TipOpklade;
import domen.Utakmica;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import kontroler.KlijentController;
import model.ParTableModel;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Darko
 */
public class KreirajTiketForma extends javax.swing.JFrame {

    private Tiket tiket;
    private KlijentController kom;
    private ParTableModel parTableModel;
    private double ukupnaKvota = 1, ulog, dobitak;
    private Radnik prijavljeni;
    
    public KreirajTiketForma(Tiket t, Radnik r) throws IOException, ClassNotFoundException {
        initComponents();
        setLocationRelativeTo(null);
        this.tiket = t;
        prijavljeni = r;
        kom = KlijentController.getInstance();
        idField.setText(Integer.toString(t.getIdTiket()));
        popuniRadnike();
        popuniKorisnike();
        popuniUtakmice();
        tipOpkladeComboBox.setModel(new DefaultComboBoxModel<>(TipOpklade.values()));
        parTableModel = new ParTableModel(t.getParovi());
        tabelaParovi.setModel(parTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        radnikComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        korisnikComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tipOpkladeComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        utakmicaComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        dobitakField = new javax.swing.JTextField();
        dodajParButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaParovi = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        kvotaField = new javax.swing.JTextField();
        uplatiTiketButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ulogField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ukupnaKvotaField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Kreiraj Tiket");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("IDTiketa");

        idField.setEditable(false);
        idField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Radnik:");

        radnikComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Korisnik:");

        korisnikComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setText("Dodaj Par");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Utakmica:");

        tipOpkladeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tipOpkladeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipOpkladeComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Tip Opklade:");

        utakmicaComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        utakmicaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utakmicaComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Kvota:");

        dobitakField.setEditable(false);

        dodajParButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dodajParButton.setText("Dodaj Par");
        dodajParButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajParButtonActionPerformed(evt);
            }
        });

        tabelaParovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaParovi);

        jLabel9.setText("Ukupna Kvota:");

        kvotaField.setEditable(false);
        kvotaField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        uplatiTiketButton.setText("Uplati Tiket");
        uplatiTiketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uplatiTiketButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Ulog:");

        ulogField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulogFieldActionPerformed(evt);
            }
        });

        jLabel11.setText("Dobitak:");

        ukupnaKvotaField.setEditable(false);
        ukupnaKvotaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ukupnaKvotaFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ulogField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(uplatiTiketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ukupnaKvotaField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dobitakField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(radnikComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(korisnikComboBox, 0, 250, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tipOpkladeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(utakmicaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(321, 321, 321))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(285, 285, 285)
                                .addComponent(jLabel1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(kvotaField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(dodajParButton, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(radnikComboBox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(korisnikComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(utakmicaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipOpkladeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kvotaField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dodajParButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobitakField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ukupnaKvotaField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uplatiTiketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ulogField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ukupnaKvotaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ukupnaKvotaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ukupnaKvotaFieldActionPerformed

    private void utakmicaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utakmicaComboBoxActionPerformed
        prikaziKvotu();
    }//GEN-LAST:event_utakmicaComboBoxActionPerformed

    private void tipOpkladeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipOpkladeComboBoxActionPerformed
        prikaziKvotu();
    }//GEN-LAST:event_tipOpkladeComboBoxActionPerformed

    private void dodajParButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajParButtonActionPerformed
        try{
            int idTiket = Integer.parseInt(idField.getText());
            Utakmica utakmica = (Utakmica) utakmicaComboBox.getSelectedItem();
            TipOpklade tip = (TipOpklade) tipOpkladeComboBox.getSelectedItem();
            double kvota = Double.parseDouble(kvotaField.getText());
            
            boolean vecPostoji = tiket.getParovi().stream()
                .anyMatch(p -> p.getUtakmica().getIdUtakmica()== utakmica.getIdUtakmica());

            if (vecPostoji) {
                JOptionPane.showMessageDialog(this, 
                    "Par sa ovom utakmicom već postoji!", 
                    "Greška", 
                    JOptionPane.ERROR_MESSAGE);
                return; 
            }

            Par par = new Par();
            par.setIdTiket(idTiket);
            par.setUtakmica(utakmica);
            par.setTipOpklade(tip);
            par.setKvota(kvota);
            
            tiket.dodajPar(par);
            par.setRedosled(tiket.getParovi().size());
            
            ukupnaKvota *= kvota;
            dobitak = ukupnaKvota * ulog;
            
            ukupnaKvotaField.setText(String.valueOf(Math.round(ukupnaKvota*100.0)/100.0));
            dobitakField.setText(String.valueOf(Math.round(dobitak*100.0)/100.0));
            
            parTableModel.fireTableDataChangedCustom();
            
            tipOpkladeComboBox.setSelectedIndex(0);
            utakmicaComboBox.setSelectedIndex(0);
            kvotaField.setText("");
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Greška prilikom dodavanja para: " + ex.getMessage());
        }
    }//GEN-LAST:event_dodajParButtonActionPerformed

    private void ulogFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulogFieldActionPerformed
        try {
            String ulogText = ulogField.getText().trim();
            if (!ulogText.isEmpty()) {
                ulog = Double.parseDouble(ulogText);

                dobitak = ukupnaKvota * ulog;

                dobitak = Math.round(dobitak * 100.0) / 100.0;

                dobitakField.setText(String.valueOf(dobitak));
            } else {
                dobitak = 0;
                dobitakField.setText("0.00");
            }
        } catch (NumberFormatException ex) {
            dobitakField.setText("0.00");
        }
    }//GEN-LAST:event_ulogFieldActionPerformed

    private void uplatiTiketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uplatiTiketButtonActionPerformed
        try {
            Korisnik k = (Korisnik) korisnikComboBox.getSelectedItem();
            Radnik r = (Radnik) radnikComboBox.getSelectedItem();

            if (ulog < 20) {
                JOptionPane.showMessageDialog(this,
                        "Minimalni ulog je 20 dinara!",
                        "Greška", JOptionPane.WARNING_MESSAGE);
                return; 
            }

            tiket.setKorisnik(k);
            tiket.setRadnik(r);
            tiket.setMoguciDobitak(dobitak);
            tiket.setStatus(0);
            tiket.setUkupnaKvota(ukupnaKvota);
            tiket.setUlog(ulog);

            ServerskiOdgovor so = kom.izmeniTiket(tiket);

            if (so.isUspesno()) {
                JOptionPane.showMessageDialog(this,
                        "Tiket je uspešno izmenjen. ID: " + tiket.getIdTiket(),
                        "Uspeh", JOptionPane.INFORMATION_MESSAGE);
                new TiketiForma(prijavljeni).setVisible(true);
                this.dispose(); 
            } else {
                JOptionPane.showMessageDialog(this,
                        "Neuspešna izmena tiketa: " + so.getPoruka(),
                        "Greška", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Greška pri izmeni tiketa: " + e.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_uplatiTiketButtonActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    }

    private void popuniRadnike() {
        try {
            ServerskiOdgovor so = kom.vratiListuSviRadnik();

            if (so.isUspesno()) {
                List<Radnik> radnici = (List<Radnik>) so.getOdgovor();
                
               
                DefaultComboBoxModel<Radnik> model = new DefaultComboBoxModel<>();
                for (Radnik r : radnici) {
                    model.addElement(r);
                }

                radnikComboBox.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Ne mogu da učitam listu radnika: " + so.getPoruka(),
                        "Greška", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Greška pri učitavanju radnika: " + e.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void popuniKorisnike() {
        try {
            ServerskiOdgovor so = kom.vratiListuSviKorisnik();

            if (so.isUspesno()) {
                List<Korisnik> korisnici = (List<Korisnik>) so.getOdgovor();
                
               
                DefaultComboBoxModel<Korisnik> model = new DefaultComboBoxModel<>();
                for (Korisnik k : korisnici) {
                    model.addElement(k);
                }

                korisnikComboBox.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Ne mogu da učitam listu korisnika: " + so.getPoruka(),
                        "Greška", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Greška pri učitavanju korisnika: " + e.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void popuniUtakmice() {
        try {
            ServerskiOdgovor so = kom.vratiListuSviUtakmica();

            if (so.isUspesno()) {
                List<Utakmica> utakmice = (List<Utakmica>) so.getOdgovor();
                
               
                DefaultComboBoxModel<Utakmica> model = new DefaultComboBoxModel<>();
                for (Utakmica u : utakmice) {
                    model.addElement(u);
                }

                utakmicaComboBox.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Ne mogu da učitam listu utakmica: " + so.getPoruka(),
                        "Greška", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Greška pri učitavanju utakmica: " + e.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void prikaziKvotu() {
        try {
            Utakmica izabranaUtakmica = (Utakmica) utakmicaComboBox.getSelectedItem();
            TipOpklade izabraniTip = (TipOpklade) tipOpkladeComboBox.getSelectedItem();

            if (izabranaUtakmica == null || izabraniTip == null) {
                kvotaField.setText("");
                return;
            }

            KvoteUtakmica kvote = new KvoteUtakmica();
            Map<TipOpklade, Double> mapaKvote = kvote.getKvoteZaUtakmicu(izabranaUtakmica.getIdUtakmica());

            Double kvota = mapaKvote.get(izabraniTip);

            if (kvota != null) {
                kvotaField.setText(String.valueOf(kvota));
            } else {
                kvotaField.setText("N/A");
            }
        } catch (Exception e) {
            kvotaField.setText("Greška");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dobitakField;
    private javax.swing.JButton dodajParButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Korisnik> korisnikComboBox;
    private javax.swing.JTextField kvotaField;
    private javax.swing.JComboBox<Radnik> radnikComboBox;
    private javax.swing.JTable tabelaParovi;
    private javax.swing.JComboBox<TipOpklade> tipOpkladeComboBox;
    private javax.swing.JTextField ukupnaKvotaField;
    private javax.swing.JTextField ulogField;
    private javax.swing.JButton uplatiTiketButton;
    private javax.swing.JComboBox<Utakmica> utakmicaComboBox;
    // End of variables declaration//GEN-END:variables
}
